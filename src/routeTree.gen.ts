/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as HostRouteRouteImport } from './routes/host/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VansIndexRouteImport } from './routes/vans/index'
import { Route as HostIndexRouteImport } from './routes/host/index'
import { Route as VansIdRouteImport } from './routes/vans/$id'
import { Route as HostReviewsRouteImport } from './routes/host/reviews'
import { Route as HostIncomeRouteImport } from './routes/host/income'
import { Route as HostVansIndexRouteImport } from './routes/host/vans/index'
import { Route as HostVansIdRouteRouteImport } from './routes/host/vans/$id/route'
import { Route as HostVansIdIndexRouteImport } from './routes/host/vans/$id/index'
import { Route as HostVansIdPricingRouteImport } from './routes/host/vans/$id/pricing'
import { Route as HostVansIdPhotosRouteImport } from './routes/host/vans/$id/photos'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const HostRouteRoute = HostRouteRouteImport.update({
  id: '/host',
  path: '/host',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VansIndexRoute = VansIndexRouteImport.update({
  id: '/vans/',
  path: '/vans/',
  getParentRoute: () => rootRouteImport,
} as any)
const HostIndexRoute = HostIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HostRouteRoute,
} as any)
const VansIdRoute = VansIdRouteImport.update({
  id: '/vans/$id',
  path: '/vans/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const HostReviewsRoute = HostReviewsRouteImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => HostRouteRoute,
} as any)
const HostIncomeRoute = HostIncomeRouteImport.update({
  id: '/income',
  path: '/income',
  getParentRoute: () => HostRouteRoute,
} as any)
const HostVansIndexRoute = HostVansIndexRouteImport.update({
  id: '/vans/',
  path: '/vans/',
  getParentRoute: () => HostRouteRoute,
} as any)
const HostVansIdRouteRoute = HostVansIdRouteRouteImport.update({
  id: '/vans/$id',
  path: '/vans/$id',
  getParentRoute: () => HostRouteRoute,
} as any)
const HostVansIdIndexRoute = HostVansIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HostVansIdRouteRoute,
} as any)
const HostVansIdPricingRoute = HostVansIdPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => HostVansIdRouteRoute,
} as any)
const HostVansIdPhotosRoute = HostVansIdPhotosRouteImport.update({
  id: '/photos',
  path: '/photos',
  getParentRoute: () => HostVansIdRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/host': typeof HostRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/host/income': typeof HostIncomeRoute
  '/host/reviews': typeof HostReviewsRoute
  '/vans/$id': typeof VansIdRoute
  '/host/': typeof HostIndexRoute
  '/vans': typeof VansIndexRoute
  '/host/vans/$id': typeof HostVansIdRouteRouteWithChildren
  '/host/vans': typeof HostVansIndexRoute
  '/host/vans/$id/photos': typeof HostVansIdPhotosRoute
  '/host/vans/$id/pricing': typeof HostVansIdPricingRoute
  '/host/vans/$id/': typeof HostVansIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/host/income': typeof HostIncomeRoute
  '/host/reviews': typeof HostReviewsRoute
  '/vans/$id': typeof VansIdRoute
  '/host': typeof HostIndexRoute
  '/vans': typeof VansIndexRoute
  '/host/vans': typeof HostVansIndexRoute
  '/host/vans/$id/photos': typeof HostVansIdPhotosRoute
  '/host/vans/$id/pricing': typeof HostVansIdPricingRoute
  '/host/vans/$id': typeof HostVansIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/host': typeof HostRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/host/income': typeof HostIncomeRoute
  '/host/reviews': typeof HostReviewsRoute
  '/vans/$id': typeof VansIdRoute
  '/host/': typeof HostIndexRoute
  '/vans/': typeof VansIndexRoute
  '/host/vans/$id': typeof HostVansIdRouteRouteWithChildren
  '/host/vans/': typeof HostVansIndexRoute
  '/host/vans/$id/photos': typeof HostVansIdPhotosRoute
  '/host/vans/$id/pricing': typeof HostVansIdPricingRoute
  '/host/vans/$id/': typeof HostVansIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/host'
    | '/about'
    | '/host/income'
    | '/host/reviews'
    | '/vans/$id'
    | '/host/'
    | '/vans'
    | '/host/vans/$id'
    | '/host/vans'
    | '/host/vans/$id/photos'
    | '/host/vans/$id/pricing'
    | '/host/vans/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/host/income'
    | '/host/reviews'
    | '/vans/$id'
    | '/host'
    | '/vans'
    | '/host/vans'
    | '/host/vans/$id/photos'
    | '/host/vans/$id/pricing'
    | '/host/vans/$id'
  id:
    | '__root__'
    | '/'
    | '/host'
    | '/about'
    | '/host/income'
    | '/host/reviews'
    | '/vans/$id'
    | '/host/'
    | '/vans/'
    | '/host/vans/$id'
    | '/host/vans/'
    | '/host/vans/$id/photos'
    | '/host/vans/$id/pricing'
    | '/host/vans/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HostRouteRoute: typeof HostRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  VansIdRoute: typeof VansIdRoute
  VansIndexRoute: typeof VansIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/host': {
      id: '/host'
      path: '/host'
      fullPath: '/host'
      preLoaderRoute: typeof HostRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vans/': {
      id: '/vans/'
      path: '/vans'
      fullPath: '/vans'
      preLoaderRoute: typeof VansIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/host/': {
      id: '/host/'
      path: '/'
      fullPath: '/host/'
      preLoaderRoute: typeof HostIndexRouteImport
      parentRoute: typeof HostRouteRoute
    }
    '/vans/$id': {
      id: '/vans/$id'
      path: '/vans/$id'
      fullPath: '/vans/$id'
      preLoaderRoute: typeof VansIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/host/reviews': {
      id: '/host/reviews'
      path: '/reviews'
      fullPath: '/host/reviews'
      preLoaderRoute: typeof HostReviewsRouteImport
      parentRoute: typeof HostRouteRoute
    }
    '/host/income': {
      id: '/host/income'
      path: '/income'
      fullPath: '/host/income'
      preLoaderRoute: typeof HostIncomeRouteImport
      parentRoute: typeof HostRouteRoute
    }
    '/host/vans/': {
      id: '/host/vans/'
      path: '/vans'
      fullPath: '/host/vans'
      preLoaderRoute: typeof HostVansIndexRouteImport
      parentRoute: typeof HostRouteRoute
    }
    '/host/vans/$id': {
      id: '/host/vans/$id'
      path: '/vans/$id'
      fullPath: '/host/vans/$id'
      preLoaderRoute: typeof HostVansIdRouteRouteImport
      parentRoute: typeof HostRouteRoute
    }
    '/host/vans/$id/': {
      id: '/host/vans/$id/'
      path: '/'
      fullPath: '/host/vans/$id/'
      preLoaderRoute: typeof HostVansIdIndexRouteImport
      parentRoute: typeof HostVansIdRouteRoute
    }
    '/host/vans/$id/pricing': {
      id: '/host/vans/$id/pricing'
      path: '/pricing'
      fullPath: '/host/vans/$id/pricing'
      preLoaderRoute: typeof HostVansIdPricingRouteImport
      parentRoute: typeof HostVansIdRouteRoute
    }
    '/host/vans/$id/photos': {
      id: '/host/vans/$id/photos'
      path: '/photos'
      fullPath: '/host/vans/$id/photos'
      preLoaderRoute: typeof HostVansIdPhotosRouteImport
      parentRoute: typeof HostVansIdRouteRoute
    }
  }
}

interface HostVansIdRouteRouteChildren {
  HostVansIdPhotosRoute: typeof HostVansIdPhotosRoute
  HostVansIdPricingRoute: typeof HostVansIdPricingRoute
  HostVansIdIndexRoute: typeof HostVansIdIndexRoute
}

const HostVansIdRouteRouteChildren: HostVansIdRouteRouteChildren = {
  HostVansIdPhotosRoute: HostVansIdPhotosRoute,
  HostVansIdPricingRoute: HostVansIdPricingRoute,
  HostVansIdIndexRoute: HostVansIdIndexRoute,
}

const HostVansIdRouteRouteWithChildren = HostVansIdRouteRoute._addFileChildren(
  HostVansIdRouteRouteChildren,
)

interface HostRouteRouteChildren {
  HostIncomeRoute: typeof HostIncomeRoute
  HostReviewsRoute: typeof HostReviewsRoute
  HostIndexRoute: typeof HostIndexRoute
  HostVansIdRouteRoute: typeof HostVansIdRouteRouteWithChildren
  HostVansIndexRoute: typeof HostVansIndexRoute
}

const HostRouteRouteChildren: HostRouteRouteChildren = {
  HostIncomeRoute: HostIncomeRoute,
  HostReviewsRoute: HostReviewsRoute,
  HostIndexRoute: HostIndexRoute,
  HostVansIdRouteRoute: HostVansIdRouteRouteWithChildren,
  HostVansIndexRoute: HostVansIndexRoute,
}

const HostRouteRouteWithChildren = HostRouteRoute._addFileChildren(
  HostRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HostRouteRoute: HostRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  VansIdRoute: VansIdRoute,
  VansIndexRoute: VansIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
